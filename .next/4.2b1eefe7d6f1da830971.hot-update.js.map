{"version":3,"sources":["webpack:///./pages/signin.js?3b2e","webpack:///./src/utilities/format.js?dad1"],"names":["SignInPage","INITIAL_STATE","email","password","error","SignInForm","props","onSubmit","event","state","auth","doSignInWithEmailAndPassword","then","setState","Router","push","catch","updateByPropertyName","preventDefault","isInvalid","target","value","message","withRedux","fromObjectToList","object","Object","keys","map","key","index","propertyName"],"mappings":"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","file":"4.2b1eefe7d6f1da830971.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport withRedux from 'next-redux-wrapper';\n\nimport initStore from '../src/store';\nimport { SignUpLink } from './signup';\nimport { PasswordForgetLink } from './pw-forget';\nimport { AppWithAuthentication } from '../src/components/App';\nimport { auth } from '../src/firebase';\nimport * as routes from '../src/constants/routes';\nimport { updateByPropertyName } from '../src/utilities/format'\n\nconst SignInPage = () =>\n  <AppWithAuthentication>\n    <div className=\"sign-in-page-container\">\n      <h1>SignIn</h1>\n      <br />\n      <div className=\"sign-in-form-container\">\n        <SignInForm />\n        <br />\n        <PasswordForgetLink />\n        <SignUpLink />\n      </div>\n    </div>\n  </AppWithAuthentication>\n\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\n\n/**\n *  CLASS: SIGN IN FORM \n *  Used in the SignInPage constant above\n */\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      email,\n      password,\n    } = this.state;\n\n    auth.doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState(() => ({ ...INITIAL_STATE }));\n        Router.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(updateByPropertyName('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      password === '' ||\n      email === '';\n\n    return (\n      <form className=\"sign-in-form\" onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            value={email}\n            onChange={event => this.setState(updateByPropertyName('email', event.target.value))}\n            type=\"text\"\n            placeholder=\"Email Address\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            value={password}\n            onChange={event => this.setState(updateByPropertyName('password', event.target.value))}\n            placeholder=\"Password\"\n          />\n        </div>\n        <button className=\"btn btn-primary\" disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withRedux(initStore)(SignInPage);\n\nexport {\n  SignInForm,\n};\n\n\n\n\n//<input\n//  value={email}\n//  onChange={event => this.setState(updateByPropertyName('email', event.target.value))}\n//  type=\"text\"\n//  placeholder=\"Email Address\"\n///>\n\n\n// WEBPACK FOOTER //\n// ./pages/signin.js","\nconst fromObjectToList = (object) => (\n  object\n    ? Object.keys(object).map(key => ({ ...object[key], index: key }))\n    : []\n);\n\n\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport {\n  fromObjectToList,\n  updateByPropertyName\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/format.js"],"sourceRoot":""}